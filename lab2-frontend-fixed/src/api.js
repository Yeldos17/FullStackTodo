import axios from "axios";

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ backend
const api = axios.create({
  baseURL: "http://localhost:8080/api", // URL –±—ç–∫–µ–Ω–¥–∞
  headers: {
    "Content-Type": "application/json",
  },
  withCredentials: false, // CORS –±–µ–∑ cookie, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ JWT
});

// üëâ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// ‚öôÔ∏è –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, —É–¥–∞–ª—è–µ–º –µ–≥–æ
api.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response && error.response.status === 403) {
      console.warn("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω ‚Äî —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –†–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º...");
      localStorage.removeItem("token");
      window.location.href = "/login";
    }
    return Promise.reject(error);
  }
);

export default api;
